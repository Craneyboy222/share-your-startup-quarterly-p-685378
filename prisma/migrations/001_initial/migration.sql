CREATE TABLE Users (id SERIAL PRIMARY KEY, username VARCHAR(255) UNIQUE NOT NULL, email VARCHAR(255) UNIQUE NOT NULL, password_hash VARCHAR(255) NOT NULL, role VARCHAR(50) NOT NULL DEFAULT 'user');
CREATE TABLE Startups (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES Users(id) ON DELETE CASCADE, name VARCHAR(255) NOT NULL, url VARCHAR(255), location VARCHAR(255), stage VARCHAR(100), goals TEXT, discount BOOLEAN DEFAULT FALSE, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE Comments (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES Users(id) ON DELETE CASCADE, startup_id INTEGER REFERENCES Startups(id) ON DELETE CASCADE, content TEXT NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE Votes (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES Users(id) ON DELETE CASCADE, startup_id INTEGER REFERENCES Startups(id) ON DELETE CASCADE, vote_type SMALLINT CHECK (vote_type IN (-1, 1)));
CREATE TABLE Notifications (id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES Users(id) ON DELETE CASCADE, type VARCHAR(50), content TEXT, is_read BOOLEAN DEFAULT FALSE, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE Discounts (id SERIAL PRIMARY KEY, startup_id INTEGER REFERENCES Startups(id) ON DELETE CASCADE, code VARCHAR(100) UNIQUE, description TEXT, expiry_date DATE);